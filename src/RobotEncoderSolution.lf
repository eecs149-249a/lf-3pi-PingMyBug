target C {
    platform: {
      name: "rp2040",
      board: "pololu_3pi_2040_robot"
    },
    threading: false,
  }
  
  import Display from "lib/Display.lf"
  import Encoders from "lib/Encoders.lf"

  reactor AngleToDistance {
    input angleChange: int32_t
    output distance: float
    
    reaction(angleChange) -> distance {=
        float D = (angleChange->value / 360.0) * 3.14159265359 * 0.03175;
        lf_set(distance->value, D);
    =}
  }

  main reactor {
    display = new Display()
    encoder = new Encoders()
    leftConverter = new AngleToDistance()
    rightConverter = new AngleToDistance()

    timer t(0, 1sec)

    reaction(t) -> encoder.trigger {=
        lf_set(encoder.trigger, true);
      =}

    reaction(startup) -> display.line0 {=
        lf_set(display.line0, "Distance (m):");
    =}

    encoder.left -> leftConverter.angleChange;
    encoder.right -> rightConverter.angleChange;

    reaction(leftConverter.distance) -> display.line1 {=
        static char buf[17];
        snprintf(buf, 17, "L: %d", leftConverter.distance->value);
        lf_set(display.line1, buf);
    =}
    
    reaction(rightConverter.distance) -> display.line2 {=
        static char buf[17];
        snprintf(buf, 17, "R: %d", rightConverter.distance->value);
        lf_set(display.line2, buf); 
    =}
  }
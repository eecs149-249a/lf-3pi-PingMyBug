 target C {
    platform: "RP2040",
    threading: false,
}
import Accelerometer from "lib/IMU.lf"
import Tilt from "lib/Tilt.lf"
import Display from "lib/Display.lf"

main reactor {
    a = new Accelerometer()
    b = new Tilt()
    d = new Display()
    timer t(0, 250 msec)

    reaction(t) -> a.trigger {=
        lf_set(a.trigger, true);
    =}

    reaction(a.x, a.y, a.z) -> b.x, b.y, b.z {=
        /// TODO: define max string size for line
        // /// based on font you can have 4 or 8 lines 

        static float bx = -0.018;
        static float by = -0.0275;
        static float bz = 0.0;
        static float mz = 1.0;
        static float my = 0.987 + 0.0275;
        static float mx = 0.998;
        
        // lf_set(b.x, (a.x->value - bx) / mx);
        // lf_set(b.y, (a.y->value - by) / my);
        // lf_set(b.z, (a.z->value - bz) / mz);

        if (a.x->value > 1) {
            lf_set(a.x, 1);
        }
        if (a.x->value < -1) {
            lf_set(a.x, -1);
        }
        if (a.y->value > 1) {
            lf_set(a.y, 1);
        }
        if (a.y->value < -1) {
            lf_set(a.y, -1);
        }
        if (a.z->value > 1) {
            lf_set(a.z, 1);
        }
        if (a.z->value < -1) {
            lf_set(a.z, -1);
        }

        lf_set(b.x, a.x->value);
        lf_set(b.y, a.y->value);
        lf_set(b.z, a.z->value);

    =}
    
    reaction(b.pitch, b.roll) -> d.line0, d.line1 {=
        static char buf0[17];
        static char buf1[17];
        snprintf(buf0, 17, "pitch:%2.4f", b.pitch->value);
        snprintf(buf1, 17, "roll:%2.4f", b.roll->value);
        

        lf_set(d.line0, buf0);
        lf_set(d.line1, buf1);
    =}
}